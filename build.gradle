buildscript {
    ext {
        springBootVersion = '1.1.8.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")

    }
}

apply plugin: 'java'
//apply plugin: 'eclipse'
//apply plugin: 'idea'
apply plugin: 'spring-boot' 

jar {
    baseName = 'demo-project-1'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
    mavenCentral()
    jcenter()
    
}




dependencies {
    //compile("org.springframework.boot:spring-boot-starter-security")
    //compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-web")
    //compile 'postgresql:postgresql:9.1-901.jdbc4'
    compile ("com.google.guava:guava:18.0")
    //compile("org.postgresql:postgresql:9.3-1102-jdbc41")
	compile("commons-codec:commons-codec:1.9")
	compile('commons-beanutils:commons-beanutils:1.9.2')
	compile('com.mangofactory:swagger-springmvc:0.9.4')
    testCompile("org.springframework.boot:spring-boot-starter-test")
}

//eclipse {
//    classpath {
//         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
//         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7'
//    }
//}

task wrapper(type: Wrapper) {
    gradleVersion = '2.1'
}

tasks.withType(Test) {
    outputs.upToDateWhen { false }
    testLogging {
        events 'started', 'passed', 'failed', 'standardOut', 'standardError'
        exceptionFormat "full"
    }
}
